@page "/Estoque"

@if (produtos == null)
{
    <h5>Carregando</h5>
}
else
{
    <h3>Estoque de produtos</h3>

    <div class="container-fluid">
        <div class="row">
            @foreach (var item in categorias)
            {
                <div class="col-12 col-md-1 m-1 p-0">
                    <button class="btn btn-primary col-12" @onclick="@(() => FiltrarPorCategoria(item))">
                        @item
                    </button>
                </div>
            }
            <div class="col-12 col-md-1 m-1 p-0">
                <button class="btn btn-primary col-12" @onclick="@(() => FiltrarPorCategoria("Todos"))">
                    Todos
                </button>
            </div>

            <div class="col-12">
                <ListarProdutos produtos="@produtos" />
            </div>

        </div>
    </div>
}


@code {
    private IEnumerable<ProdutoDTO> produtos { get; set; } = new List<ProdutoDTO>();

    protected override async Task OnInitializedAsync()
    {
        await Requisicao();
    }

    private IEnumerable<string> categorias { get; set; } = new List<string>();

    private async Task Requisicao()
    {
        produtos = await HttpRepositoryProdutosDTO.Listar();

        var agrupador = produtos.GroupBy(x => x.categoria);

        categorias = agrupador.Select(x => x.Key).ToList();
    }

    private async Task FiltrarPorCategoria(string chave)
    {
        produtos = await HttpRepositoryFiltroProdutoDTO.Filtro(chave);
    }
}


