@page "/Estoque"
@using Estoque.Infraestructure.Http.Interfaces

@if (produtos == null)
{
    <h5>Carregando</h5>
}
else
{
    <h3>Estoque de produtos</h3>

    <div class="container-fluid">
        <div class="row">
            @foreach (var item in categorias)
            {
                <div class="col-12 col-md-1 m-1 p-0">
                    <button class="btn btn-primary col-12" @onclick="@(() => FiltrarPorCategoria(item))">
                        @item
                    </button>
                </div>
            }
            <div class="col-12 col-md-1 m-1 p-0">
                <button class="btn btn-primary col-12" @onclick="@(() => FiltrarPorCategoria("Todos"))">
                    Todos
                </button>
            </div>

            <div class="col-12 col-md-5 m-1 p-0 input-group">
                <input type="text" class="form-control"
                       placeholder="Descrição" aria-label="Descrição" @oninput="@((e) => Pesquisar(e) )">
            </div>

            <div class="col-12">
                <GridProdutos produtos="@produtos" />
            </div>

            <div class="d-flex justify-content-end col-12 m-1 p-0">
                <button class="btn btn-primary col-12 col-md-1 my-1 mx-3" @onclick="@(() => FiltrarPorCategoria("Todos"))">
                    Novo
                </button>
            </div>

        </div>
    </div>
}


@code {

    private IEnumerable<ProdutoDTO> produtos { get; set; } = new List<ProdutoDTO>();

    private IEnumerable<ProdutoDTO> produtosAux { get; set; } = new List<ProdutoDTO>();

    protected override async Task OnInitializedAsync()
    {
        await Requisicao();
    }

    private IEnumerable<string> categorias { get; set; } = new List<string>();

    private async Task Requisicao()
    {
        produtos = await listarProdutosDTO.ExecutarListagem();

        produtosAux = produtos;

        var agrupador = produtos.GroupBy(x => x.categoria);

        categorias = agrupador.Select(x => x.Key).ToList();
    }

    private async Task FiltrarPorCategoria(string chave)
    {
        produtos = await filtrarProdutoDTO.ExecutarFiltro(chave);
    }

    private void Pesquisar(ChangeEventArgs args)
    {
        if (!string.IsNullOrEmpty(args.Value.ToString()))
        {
            var produtosFiltrados = produtos.Where(x => x.descricao.Contains(args.Value.ToString(), StringComparison.OrdinalIgnoreCase))
                                    .ToList();

            if (produtosFiltrados.Count() != 0)
            {
                produtos = produtosFiltrados;
            }
        }
        else
        {
            produtos = produtosAux;
        }
    }
}


